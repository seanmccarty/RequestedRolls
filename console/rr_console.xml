<?xml version="1.0" encoding="iso-8859-1"?>

<!-- 
  Please see the license.html file included with this distribution for 
  attribution and copyright information.
-->

<root>
	<windowclass name="RequestRolls">
		<frame>utilitybox</frame>
		<placement>
			<size width="620" height="400" />
		</placement>
		<sizelimits>
			<minimum width="575" height="370" />
			<dynamic />
		</sizelimits>
		<helplinkres>RR_url_help</helplinkres>
		<softclose />
		<nodelete />
		<sheetdata>
			<windowtitlebar name="title">
				<resource>RR_window_title</resource>
			</windowtitlebar>
			<anchor_content_utilitybox_top />
			<anchor_content_utilitybox_bottom />
			<windowmenubar_utilitybox name="menubar" />
			<button_text_sm name="manual_rolls">
				<anchored position="insidetopleft" offset="15,15" width="120" />
				<state textres="RR_label_pendingRolls" />
				<script>
					function onButtonPress()
						Interface.openWindow("manualrolls", "");
					end
				</script>
			</button_text_sm>

			<sub_ps name="main">
				<class>rr_console</class>
			</sub_ps>
			<sub_ps name="options">
				<class>rr_options</class>
				<fastinit />
			</sub_ps>
			<sub_ps name="staged">
				<class>rr_staged</class>
			</sub_ps>
			
			<tabs_partysheet name="tabs">
				<tab>
					<icon>tab_main</icon>
					<subwindow>main</subwindow>
				</tab>
				<tab>
					<icon>tab_other</icon>
					<subwindow>options</subwindow>
				</tab>
				<tab>
					<icon>tab_other</icon>
					<subwindow>staged</subwindow>
				</tab>
			</tabs_partysheet>
		</sheetdata>
	</windowclass>

	<windowclass name="rr_console">
		<sheetdata>
			<anchor_content_top/>
			<anchor_content_bottom/>
			<!-- PC list -->
			<label name="label_PC">
				<anchored>
					<top parent="contentanchor" anchor="bottom" relation="relative" height="20"/>
					<left/>
				</anchored>
				<static textres="RR_pc" />
			</label>

			<button_select_all name="PC_all">
				<anchored to="label_PC" position="rightlow" offset="10,0"/>
				<target>PC</target>
			</button_select_all>
			<button_select_random name="PC_random">
				<anchored to="PC_all" position="rightlow"/>
				<target>PC</target>
			</button_select_random>
			<button_deselect_all>
				<anchored to="PC_random" position="rightlow"/>
				<target>PC</target>
			</button_deselect_all>

			<RR_window_selector name="rr_list_pc" >	
				<parameters>
					<pc/>
				</parameters>
				<anchored>
					<top parent="contentanchor" anchor="bottom" relation="relative" offset="0" />
				</anchored>
			</RR_window_selector>

			<!-- NPC list -->
			<label name="label_NPC">
				<anchored>
					<top parent="contentanchor" anchor="bottom" relation="relative" width="55" height="20" offset="10"/>
					<left/>
				</anchored>
				<static textres="RR_npc" />
			</label>

			<button_select_all name="NPC_all">
				<anchored to="label_NPC" position="rightlow"/>
				<target>NPC</target>
			</button_select_all>
			<button_select_random name="NPC_random">
				<anchored to="NPC_all" position="rightlow"/>
				<target>NPC</target>
			</button_select_random>
			<button_deselect_all>
				<anchored to="NPC_random" position="rightlow"/>
				<target>NPC</target>
			</button_deselect_all>

			<RR_window_selector name="rr_list_npc">
				<parameters>
					<npc/>
				</parameters>
				<anchored>
					<top parent="contentanchor" anchor="bottom" relation="relative" offset="0" />
				</anchored>
			</RR_window_selector>

			<!-- Footer anchors -->
			<genericcontrol name="footeranchor">
				<anchored height="20">
					<bottom offset="-95" />
					<left offset="1"/>
					<right />
				</anchored>
				<gmvisibleonly />
			</genericcontrol>
			<genericcontrol name="leftanchor">
				<anchored to="footeranchor" position="insidetopleft" width="0" height="20" />
				<disabled />
			</genericcontrol>
			<!-- Settings -->
			<buttonfield name="hiderollresults">
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="5" />
				</anchored>
				<state icon="visibilityon" tooltipres="ps_tooltip_showrollon" frame="buttonup" frameoffset="5,5,5,5"/>
				<state icon="visibilityoff" tooltipres="ps_tooltip_showrolloff" frame="buttondown" frameoffset="5,5,5,5"/>
			</buttonfield>
			<buttonfield name="clicktoroll">
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="30" />
				</anchored>
				<pressed offset="1,1" />

				<state icon="sidebar_icon_default" tooltipres="RR_tooltip_clickToRoll_off" frame="buttonup" frameoffset="5,5,5,5"/>
				<state icon="sidebar_icon_default" tooltipres="RR_tooltip_clickToRoll_on" frame="buttondown" frameoffset="5,5,5,5"/>
				<tintable/>
				<script>
					function onInit()
						setColor(ColorManager.getButtonIconColor());
					end
				</script>
			</buttonfield>
			<buttonfield name="DClink">
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="30" />
				</anchored>
				<state icon="RR_field_linked_mono" tooltipres="RR_tooltip_linkDC_off" frame="buttonup" frameoffset="5,5,5,5"/>
				<state icon="RR_field_linked_mono" tooltipres="RR_tooltip_linkDC_on" frame="buttondown" frameoffset="5,5,5,5"/>
				<gmvisibleonly />
				<script>
					function onInit()
						setColor(ColorManager.getButtonIconColor());
						DB.addHandler("requestsheet.check.dc", "onUpdate", linker);
						DB.addHandler("requestsheet.save.dc", "onUpdate", linker);
						DB.addHandler("requestsheet.skill.dc", "onUpdate", linker);
					end
					
					--use var run to prevent recursion. set other DC nodes to same value
					run = true;
					function linker(nodeUpdated)
						if run and self.getValue() == 1 then
							run=false;
							node = DB.getPath(nodeUpdated);
							val = DB.getValue(DB.getPath(nodeUpdated),0);
							if node ~= "requestsheet.check.dc" then DB.setValue("requestsheet.check.dc","number", val); end
							if node ~= "requestsheet.save.dc" then DB.setValue("requestsheet.save.dc","number", val); end
							if node ~= "requestsheet.skill.dc" then DB.setValue("requestsheet.skill.dc","number", val); end
							run=true;
						end
						
					end
				</script>
			</buttonfield>
			<buttonfield name="autoroll">
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="30" />
				</anchored>
				<state icon="sidebar_icon_recordtype_table" tooltipres="RR_tooltip_autoRoll_off" frame="buttonup" frameoffset="5,5,5,5"/>
				<state icon="sidebar_icon_recordtype_table" tooltipres="RR_tooltip_autoRoll_on" frame="buttondown" frameoffset="5,5,5,5"/>
				<script>
					function onInit()
						setColor(ColorManager.getButtonIconColor());
					end
				</script>
			</buttonfield>
			<buttonfield name="deselectonroll">
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="30" />
				</anchored>
				<state icon="tool_target_clear_30" tooltipres="RR_tooltip_deselectOnRoll_off" frame="buttonup" frameoffset="5,5,5,5"/>
				<state icon="tool_target_clear_30" tooltipres="RR_tooltip_deselectOnRoll_on" frame="buttondown" frameoffset="5,5,5,5"/>
				<script>
					function onInit()
						setColor(ColorManager.getButtonIconColor());
					end
				</script>
			</buttonfield>
			<button_icon name="mirrortargeting">
				<icon normal="sidebar_icon_recordtype_battle" />
				<tooltip textres="RR_tooltip_mirrorTargeting" />
				<tintable/>
				<script>
					function onButtonPress()
						RR.mirrorTargeting();
					end
				</script>
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="100" />
				</anchored>
			</button_icon>
			<button_icon name="proficiencytargeting">
				<icon normal="button_prof" />
				<tooltip textres="RR_tooltip_proficiencyTargeting" />
				<script>
					function onButtonPress()
						RR.targetSkillProficency(DB.getValue("requestsheet.skill.selected", ""));
					end
				</script>
				<tintable/>
				<anchored to="leftanchor" height="23" width="23">
					<top />
					<left anchor="right" relation="relative" offset="30" />
				</anchored>
			</button_icon>

			<!-- Roll selectors -->
			<!-- checks -->
			<genericcontrol name="checkframe">
				<anchored to="hiderollresults" position="belowleft" offset="0,15" height="20" width="245" />
				<frame name="groupbox" offset="10,10,10,10" />
				<gmvisibleonly />
			</genericcontrol>			
			<button_roll name="checkroll">
				<anchored to="checkframe" position="insidetopleft" offset="2,0" />
				<gmvisibleonly />
				<script>
					function onButtonPress()
						RRRollManager.onButtonPress("check");
					end
					function onDragStart(button, x, y, draginfo)
						draginfo.setType("RR");
						draginfo.setIcon("action_roll");
						draginfo.setDescription("check");
						return true;
					end
				</script>
			</button_roll>
			<label name="checklabel">
				<anchored to="checkroll" position="righthigh" offset="3,0" />
				<static textres="RR_label_check" />
				<gmvisibleonly />
			</label>
			<combobox name="check.selected">
				<anchored to="checklabel" position="righthigh" offset="10,0" width="100" height="20" />
				<default textres="ps_default_groupability" />
				<gmvisibleonly />
				<script>
					function onInit()
						super.onInit();

						local node = window.getDatabaseNode();
						DB.addHandler(DB.getPath(node, "check.list.*.name"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "check.list.*.show"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "check.list"), "onChildDeleted", buildOptions);

						buildOptions();
					end

					function onClose()
						local node = window.getDatabaseNode();
						DB.removeHandler(DB.getPath(node, "check.list.*.name"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "check.list.*.show"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "check.list"), "onChildDeleted", buildOptions);
					end

					function buildOptions()
						clear();
						for _,w in pairs(DB.getChildren("requestsheet.check.list")) do
							if DB.getValue(w,"show",0)>=1 then
								add(DB.getValue(w,"name",""));
							end
						end
					end
				</script>
			</combobox>
			<label name="checkdclabel">
				<anchored to="check.selected" position="righthigh" offset="10,0" />
				<static textres="dc" />
				<gmvisibleonly />
			</label>
			<basicnumber name="check.dc">
				<anchored to="checkdclabel" position="righthigh" offset="10,0" width="30" height="20" />
				<gmvisibleonly />
			</basicnumber>			
			<!-- saves -->
			<genericcontrol name="saveframe">
				<anchored to="checkframe" position="right" offset="15,0"  width="235" />
				<frame name="groupbox" offset="10,10,10,10" />
				<gmvisibleonly />
			</genericcontrol>			
			<button_roll name="saveroll">
				<anchored to="saveframe" position="insidetopleft" offset="2,0" />
				<gmvisibleonly />
				<script>
					function onButtonPress()
						RRRollManager.onButtonPress("save");
					end
					function onDragStart(button, x, y, draginfo)
						draginfo.setType("RR");
						draginfo.setIcon("action_roll");
						draginfo.setDescription("save");
						return true;
					end
				</script>
			</button_roll>
			<label name="savelabel">
				<anchored to="saveroll" position="righthigh" offset="3,0" />
				<static textres="RR_label_save" />
				<gmvisibleonly />
			</label>
			<combobox name="save.selected">
				<anchored to="savelabel" position="righthigh" offset="10,0" width="100" height="20" />
				<default>Select save</default>
				<gmvisibleonly />
				<script>
					function onInit()
						super.onInit();

						local node = window.getDatabaseNode();
						DB.addHandler(DB.getPath(node, "save.list.*.name"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "save.list.*.show"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "save.list"), "onChildDeleted", buildOptions);

						buildOptions();
					end

					function onClose()
						local node = window.getDatabaseNode();
						DB.removeHandler(DB.getPath(node, "save.list.*.name"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "save.list.*.show"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "save.list"), "onChildDeleted", buildOptions);
					end

					function buildOptions()
						clear();
						for _,w in pairs(DB.getChildren("requestsheet.save.list")) do
							if DB.getValue(w,"show",0)>=1 then
								add(DB.getValue(w,"name",""));
							end
						end
					end
				</script>
			</combobox>
			<label name="savedclabel">
				<anchored to="save.selected" position="righthigh" offset="10,0" />
				<static textres="dc" />
				<gmvisibleonly />
			</label>
			<basicnumber name="save.dc">
				<anchored to="savedclabel" position="righthigh" offset="10,0" width="30" height="20" />
				<gmvisibleonly />
			</basicnumber>

			<!-- skill -->
			<genericcontrol name="skillframe">
				<anchored to="checkframe" position="belowleft" offset="0,15" height="20" width="300" />
				<frame name="groupbox" offset="10,10,10,10" />
				<gmvisibleonly />
			</genericcontrol>
			<button_roll name="skillroll">
				<anchored to="skillframe" position="insidetopleft" offset="2,0" />
				<gmvisibleonly />
				<script>
					function onButtonPress()
						RRRollManager.onButtonPress("skill");
					end
					function onDragStart(button, x, y, draginfo)
						draginfo.setType("RR");
						draginfo.setIcon("action_roll");
						draginfo.setDescription("skill");
						return true;
					end
				</script>
			</button_roll>
			<label name="skilllabel">
				<anchored to="skillroll" position="righthigh" offset="3,0" />
				<static textres="RR_label_skill" />
				<gmvisibleonly />
			</label>	
			<combobox name="skill.selected">
				<anchored to="skilllabel" position="righthigh" offset="10,0" width="170" height="20" />
				<gmvisibleonly />
				<listmaxsize>12</listmaxsize>
				<default>Select skill</default>
				<script>
					function onInit()
						super.onInit();

						local node = window.getDatabaseNode();
						DB.addHandler(DB.getPath(node, "skill.list.*.name"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "skill.list.*.show"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "skill.list"), "onChildDeleted", buildOptions);

						buildOptions();
					end

					function onClose()
						local node = window.getDatabaseNode();
						DB.removeHandler(DB.getPath(node, "skill.list.*.name"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "skill.list.*.show"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "skill.list"), "onChildDeleted", buildOptions);
					end

					function buildOptions()
						clear();
						for _,w in pairs(DB.getChildren("requestsheet.skill.list")) do
							if DB.getValue(w,"show",0)>=1 then
								add(DB.getValue(w,"name",""));
							end
						end
					end
				</script>
			</combobox>
			<label name="skilldclabel">
				<anchored to="skill.selected" position="righthigh" offset="10,0" />
				<static textres="dc" />
				<gmvisibleonly />
			</label>
			<basicnumber name="skill.dc">
				<anchored to="skilldclabel" position="righthigh" offset="10,0" width="30" height="20" />
				<gmvisibleonly />
			</basicnumber>			
			<!-- Dice roll -->
			<genericcontrol name="diceframe">
				<anchored to="skillframe" position="right" offset="15,0"  width="120" />
				<frame name="groupbox" offset="10,10,10,10" />
				<gmvisibleonly />
			</genericcontrol>							
			<button_roll name="diceroll">
				<anchored to="diceframe" position="insidetopleft" offset="2,0" />
				<gmvisibleonly />
				<script>
					function onButtonPress()
						RRRollManager.onButtonPress("dice");
					end
					function onDragStart(button, x, y, draginfo)
						draginfo.setType("RR");
						draginfo.setIcon("action_roll");
						draginfo.setDescription("dice");
						return true;
					end
				</script>
			</button_roll>
			<label name="dicelabel">
				<anchored to="diceroll" position="righthigh" offset="3,0" />
				<static textres="RR_label_dice" />
				<gmvisibleonly />
			</label>	
			<combobox name="dice.selected">
				<anchored to="dicelabel" position="righthigh" offset="10,0" width="60" height="20" />
				<gmvisibleonly />
				<listmaxsize>12</listmaxsize>
				<default>d20</default>
				<unsorted/>
				<script>
					function onInit()
						super.onInit();

						local node = window.getDatabaseNode();
						DB.addHandler(DB.getPath(node, "dice.list.*.name"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "dice.list.*.show"), "onUpdate", buildOptions);
						DB.addHandler(DB.getPath(node, "dice.list"), "onChildDeleted", buildOptions);

						buildOptions();
					end

					function onClose()
						local node = window.getDatabaseNode();
						DB.removeHandler(DB.getPath(node, "dice.list.*.name"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "dice.list.*.show"), "onUpdate", buildOptions);
						DB.removeHandler(DB.getPath(node, "dice.list"), "onChildDeleted", buildOptions);
					end

					function buildOptions()
						clear();
						local listStore = {};
						for _,w in pairs(DB.getChildren("requestsheet.dice.list")) do
							if DB.getValue(w,"show",0)>=1 then
								table.insert(listStore,DB.getValue(w,"name",""));
							end
						end
						table.sort(listStore,RR.naturalSort)
						addItems(listStore);
					end
				</script>
			</combobox>
			<!-- Init -->
			<genericcontrol name="initframe">
				<anchored to="diceframe" position="right" offset="15,0" width="45" />
				<frame name="groupbox" offset="10,10,10,10" />
				<gmvisibleonly />
			</genericcontrol>							
			<button_roll name="initroll">
				<anchored to="initframe" position="insidetopleft" offset="2,0" />
				<script>
					function onButtonPress()
						RRRollManager.onButtonPress("init");
					end
					function onDragStart(button, x, y, draginfo)
						draginfo.setType("RR");
						draginfo.setIcon("action_roll");
						draginfo.setDescription("init");
						return true;
					end
				</script>
				<gmvisibleonly />
			</button_roll>
			<label name="initlabel">
				<anchored to="initroll" position="righthigh" offset="3,0" />
				<static textres="RR_label_init" />
				<gmvisibleonly />
			</label>

			<!-- old person buttons come last because they are anchored in the middle-->
			<subwindow name="buttonholderwindow">
				<anchored>
					<top parent="rr_list_npc" anchor="bottom" relation="relative" offset="5" />
					<bottom parent="footeranchor" anchor="top" offset="-10"/>
					<left offset="0" />
					<right offset="0" />
				</anchored>	
				<class>classwindow_buttonselectors</class>
				<activate />
			</subwindow>

		</sheetdata>
	</windowclass>


	<!-- the individual entries in the npc/pc list -->
	<!-- the hidden number "RRselected" is what ties the selection button to the CT nodes -->
	<windowclass name="rr_entry">
		<script>
			function onInit()
				registerMenuItem(Interface.getString("RR_tooltip_openCharacterSheet"), "sidebar_icon_recordtype_charsheet", 3);
				registerMenuItem(Interface.getString("RR_tooltip_mirrorTargeting_specific"), "sidebar_icon_recordtype_battle", 4);
				registerMenuItem(Interface.getString("RR_tooltip_deleteRolls"), "sidebar_icon_recordtype_hindrance", 6);
				registerMenuItem(Interface.getString("RR_tooltip_forceRolls"), "sidebar_icon_recordtype_table", 7);
			end
			function onMenuSelection(selection, subselection, subsubselection)
				if selection == 3 then
					local node = getDatabaseNode();
					local type, record = DB.getValue(getDatabaseNode(),"link");
					if record == "" then
						record = DB.getPath(node);
					end
					Interface.openWindow(type, record);
				elseif selection == 4 then
					RR.mirrorTargeting(getDatabaseNode());
				elseif selection == 6 then
					RRActionManager.notifyAllRolls(getDatabaseNode(), false);
				elseif selection == 7 then
					RRActionManager.notifyAllRolls(getDatabaseNode(), true);
				end
			end
			function onDrop(x, y, draginfo)
				local nodeCT = getDatabaseNode();
				local sCTNode = DB.getPath(nodeCT);
				return CombatDropManager.handleAnyDrop(draginfo, sCTNode);
			end
		</script>
		<sheetdata> 
			<hn name="RRselected" />
			<hn name="RRdirty" />
			<anchor_column name="columnanchor" />
			<hsx name="name">
				<anchored height="20">
					<top parent="columnanchor" anchor="bottom" offset="10"/>
					<left offset="10"/>
				</anchored>	
				<readonly />
				<invisible />
				<script>
					function onInit()
						super.onInit()
						window.RRselected.setTooltipText(getValue());
						window.RRselected.setStateTooltipText(1, getValue());
					end
					function onValueChanged()
						super.onValueChanged()
						window.RRselected.setTooltipText(getValue());
						window.RRselected.setStateTooltipText(1, getValue());
					end
				</script>
			</hsx>
		
			<tokenfield name="token">
				<anchored width="40" height="40">
					<top parent="columnanchor" anchor="bottom" offset="10"/>
					<left offset="10"/>
				</anchored>
				<readonly />
				<nodrag />
				<nodrop />
				<empty>token_empty</empty>			
			</tokenfield>		
			
			<!-- The first state is empty so that it is invisible -->
			<buttonfield name="RRselected">
				<!-- tool tip text will only update after the first time the combat tracker is opened in a session -->
				<state/>
				<state color="32FF32" icon="RR_SelectionIndicator"/>
				<hover color="F2D10D" icon="RR_SelectionIndicator"/>
				<anchored  to="token" position="over" offset="3,3"/>
			</buttonfield>

			<!-- The first state is empty so that it is invisible -->
			<buttonfield  name="RRdirty">
				<anchored height="10">
					<bottom parent="token" anchor="bottom" offset="5"/>
					<left parent="token" anchor="left" offset="5"/>
					<right/>
				</anchored>
				<disabled/>
				<state />
				<state color="E80000" icon="RR_RollIndicator"/>
			</buttonfield>

			<!-- show currently active character, first state is invisible -->
			<buttonfield  name="active">
				<anchored height="14">
					<bottom parent="token" anchor="top" offset="9"/>
					<left parent="token" anchor="left" offset="6"/>
					<right/>
				</anchored>
				<disabled/>
				<state />
				<state color="FFFF00" icon="RR_RollIndicator"/>
			</buttonfield>
		</sheetdata>
	</windowclass>
</root>
