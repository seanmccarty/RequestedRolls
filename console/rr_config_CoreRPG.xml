<?xml version="1.0" encoding="iso-8859-1"?>
<root>
	<!-- Remove save combobx and DC, resize window for roll button only entry -->
	<windowclass name="rr_console" merge="join">
		<sheetdata>
			<genericcontrol name="footeranchor" merge="join">
				<anchored height="20">
					<bottom offset="-65" />
				</anchored>
			</genericcontrol>

			<buttonfield name="DClink" merge="delete"/>
			<buttonfield name="proficiencytargeting" merge="delete"/>

			<rollModule name="check" merge="delete"/>
			<rollModule name="save" merge="delete"/>
			<rollModule name="skill" merge="join">
				<anchored><top offset="0"/></anchored>
				<showDC merge="delete"/>
				<comboWidth>240</comboWidth>
			</rollModule>
			<rollModule name="init" merge="delete"/>
		</sheetdata>
	</windowclass>

	<windowclass name="oldpersonbutton_expanderTray" merge="join">
		<sheetdata>
			<label name="dclabel">
				<invisible/>
			</label>
			<basicnumber name="dc">
				<invisible/>
			</basicnumber>
		</sheetdata>
	</windowclass>

	<!-- Add the code to get actor so that rActor is present when going through the roll chain. Otherwise, it would need to look up the active users current identity. -->
	<windowclass name="char_attribute" merge="join">
		<margins control="0,0,0,3" />
		<script>
			function onDragStart(button, x, y, draginfo)
				if label.isEmpty() and dice.isEmpty() and bonus.getValue() == 0 then
					return nil;
				end

				if dice.isEmpty() then
					draginfo.setType("number");
					draginfo.setDescription(label.getValue());
					draginfo.setStringData(label.getValue());
					draginfo.setNumberData(bonus.getValue());
				else
					local rRoll = { sType = "dice", sDesc = label.getValue(), aDice = dice.getDice(), nMod = bonus.getValue() };
					local rActor = ActorManager.resolveActor(self.windowlist.window.windowlist.window.getDatabaseNode())
					ActionsManager.performAction(draginfo, rActor, rRoll);
				end
				return true;
			end
			
			function onDoubleClick(x, y)
				if dice.isEmpty() then
					ModifierStack.addSlot(label.getValue(), bonus.getValue());
				else
					local rRoll = { sType = "dice", sDesc = label.getValue(), aDice = dice.getDice(), nMod = bonus.getValue() };
					local rActor = ActorManager.resolveActor(self.windowlist.window.windowlist.window.getDatabaseNode())
					ActionsManager.performAction(nil, rActor, rRoll);
				end
				return true;
			end

			function onDrop(x, y, draginfo)
				local sDragType = draginfo.getType();
				if sDragType == "dice" then
					local aDropDice = draginfo.getDiceData();
					for _,vDie in ipairs(aDropDice) do
						dice.addDie(vDie.type);
					end
					return true;
				end
			end
		</script>
	</windowclass>
	
</root>